
Stm32f411x.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000538  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006d0  080006d8  000106d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006d0  080006d0  000106d8  2**0
                  CONTENTS
  4 .ARM          00000000  080006d0  080006d0  000106d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006d0  080006d8  000106d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006d0  080006d0  000106d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006d4  080006d4  000106d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000000  080006d8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080006d8  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000106d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000be6  00000000  00000000  00010708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000322  00000000  00000000  000112ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000f0  00000000  00000000  00011610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000b8  00000000  00000000  00011700  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001db0  00000000  00000000  000117b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001340  00000000  00000000  00013568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000082e7  00000000  00000000  000148a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001cb8f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002c0  00000000  00000000  0001cbe0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080006b8 	.word	0x080006b8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080006b8 	.word	0x080006b8

080001d8 <GPIO_Init>:

/*
 * GPIO initialization
 */
void GPIO_Init(GPIOx_Handle_t *GPIO)
{
 80001d8:	b480      	push	{r7}
 80001da:	b089      	sub	sp, #36	; 0x24
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
	uint32_t pinConfig = 0;
 80001e0:	2300      	movs	r3, #0
 80001e2:	61fb      	str	r3, [r7, #28]
	//1. Configuring mode of GPIO
	if(GPIO->GPIO_PinConfig.pinMode <= GPIO_MODE_ANALOG)
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	795b      	ldrb	r3, [r3, #5]
 80001e8:	2b03      	cmp	r3, #3
 80001ea:	d87f      	bhi.n	80002ec <GPIO_Init+0x114>
		// none interrupt mode
		/*
		 * 2*0 =  Ustawienia dla pinu 0 zerowy bait
		 * 2*1 = Ustawienia dla pinu numer 1 wpisane zostana w drugi bit
		 */
		pinConfig = (GPIO->GPIO_PinConfig.pinMode <<2 *(GPIO->GPIO_PinConfig.pinNumber));
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	795b      	ldrb	r3, [r3, #5]
 80001f0:	461a      	mov	r2, r3
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	791b      	ldrb	r3, [r3, #4]
 80001f6:	005b      	lsls	r3, r3, #1
 80001f8:	fa02 f303 	lsl.w	r3, r2, r3
 80001fc:	61fb      	str	r3, [r7, #28]
		GPIO->pGPIOx->MODER  &=~(0x03<<pinConfig);
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	681a      	ldr	r2, [r3, #0]
 8000204:	2103      	movs	r1, #3
 8000206:	69fb      	ldr	r3, [r7, #28]
 8000208:	fa01 f303 	lsl.w	r3, r1, r3
 800020c:	43db      	mvns	r3, r3
 800020e:	4619      	mov	r1, r3
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	400a      	ands	r2, r1
 8000216:	601a      	str	r2, [r3, #0]
		GPIO->pGPIOx->MODER  |= pinConfig;
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	6819      	ldr	r1, [r3, #0]
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	69fa      	ldr	r2, [r7, #28]
 8000224:	430a      	orrs	r2, r1
 8000226:	601a      	str	r2, [r3, #0]

		pinConfig = 0;
 8000228:	2300      	movs	r3, #0
 800022a:	61fb      	str	r3, [r7, #28]

		pinConfig = (GPIO->GPIO_PinConfig.pinSpeed <<2 *(GPIO->GPIO_PinConfig.pinNumber));
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	799b      	ldrb	r3, [r3, #6]
 8000230:	461a      	mov	r2, r3
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	791b      	ldrb	r3, [r3, #4]
 8000236:	005b      	lsls	r3, r3, #1
 8000238:	fa02 f303 	lsl.w	r3, r2, r3
 800023c:	61fb      	str	r3, [r7, #28]
		GPIO->pGPIOx->OSPEEDR  &=~(0x03<<pinConfig);
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	689a      	ldr	r2, [r3, #8]
 8000244:	2103      	movs	r1, #3
 8000246:	69fb      	ldr	r3, [r7, #28]
 8000248:	fa01 f303 	lsl.w	r3, r1, r3
 800024c:	43db      	mvns	r3, r3
 800024e:	4619      	mov	r1, r3
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	400a      	ands	r2, r1
 8000256:	609a      	str	r2, [r3, #8]
		GPIO->pGPIOx->OSPEEDR  |= pinConfig;
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	6899      	ldr	r1, [r3, #8]
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	69fa      	ldr	r2, [r7, #28]
 8000264:	430a      	orrs	r2, r1
 8000266:	609a      	str	r2, [r3, #8]
		pinConfig = 0;
 8000268:	2300      	movs	r3, #0
 800026a:	61fb      	str	r3, [r7, #28]


		pinConfig = (GPIO->GPIO_PinConfig.pinPuPd <<2 *(GPIO->GPIO_PinConfig.pinNumber));
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	79db      	ldrb	r3, [r3, #7]
 8000270:	461a      	mov	r2, r3
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	791b      	ldrb	r3, [r3, #4]
 8000276:	005b      	lsls	r3, r3, #1
 8000278:	fa02 f303 	lsl.w	r3, r2, r3
 800027c:	61fb      	str	r3, [r7, #28]
		GPIO->pGPIOx->PUPDR  &=~(0x03<<pinConfig);
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	68da      	ldr	r2, [r3, #12]
 8000284:	2103      	movs	r1, #3
 8000286:	69fb      	ldr	r3, [r7, #28]
 8000288:	fa01 f303 	lsl.w	r3, r1, r3
 800028c:	43db      	mvns	r3, r3
 800028e:	4619      	mov	r1, r3
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	400a      	ands	r2, r1
 8000296:	60da      	str	r2, [r3, #12]
		GPIO->pGPIOx->PUPDR  |= pinConfig;
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	68d9      	ldr	r1, [r3, #12]
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	69fa      	ldr	r2, [r7, #28]
 80002a4:	430a      	orrs	r2, r1
 80002a6:	60da      	str	r2, [r3, #12]
		pinConfig = 0;
 80002a8:	2300      	movs	r3, #0
 80002aa:	61fb      	str	r3, [r7, #28]

		pinConfig = GPIO->GPIO_PinConfig.pinOType << GPIO->GPIO_PinConfig.pinNumber;
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	7a1b      	ldrb	r3, [r3, #8]
 80002b0:	461a      	mov	r2, r3
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	791b      	ldrb	r3, [r3, #4]
 80002b6:	fa02 f303 	lsl.w	r3, r2, r3
 80002ba:	61fb      	str	r3, [r7, #28]
		GPIO->pGPIOx->OTYPER  &=~(0x03<<pinConfig);
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	685a      	ldr	r2, [r3, #4]
 80002c2:	2103      	movs	r1, #3
 80002c4:	69fb      	ldr	r3, [r7, #28]
 80002c6:	fa01 f303 	lsl.w	r3, r1, r3
 80002ca:	43db      	mvns	r3, r3
 80002cc:	4619      	mov	r1, r3
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	400a      	ands	r2, r1
 80002d4:	605a      	str	r2, [r3, #4]
		GPIO->pGPIOx->OTYPER  |= pinConfig;
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	6859      	ldr	r1, [r3, #4]
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	69fa      	ldr	r2, [r7, #28]
 80002e2:	430a      	orrs	r2, r1
 80002e4:	605a      	str	r2, [r3, #4]
		pinConfig = 0;
 80002e6:	2300      	movs	r3, #0
 80002e8:	61fb      	str	r3, [r7, #28]
 80002ea:	e0a8      	b.n	800043e <GPIO_Init+0x266>
	else
	{


		//interrupt mode
		if (GPIO->GPIO_PinConfig.pinMode <= GPIO_MODE_IT_FALLING)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	795b      	ldrb	r3, [r3, #5]
 80002f0:	2b04      	cmp	r3, #4
 80002f2:	d817      	bhi.n	8000324 <GPIO_Init+0x14c>
		{

			//1. COnfigur trigger
			EXTI->FTSR |= (1<<GPIO->GPIO_PinConfig.pinNumber);
 80002f4:	4b70      	ldr	r3, [pc, #448]	; (80004b8 <GPIO_Init+0x2e0>)
 80002f6:	68db      	ldr	r3, [r3, #12]
 80002f8:	687a      	ldr	r2, [r7, #4]
 80002fa:	7912      	ldrb	r2, [r2, #4]
 80002fc:	4611      	mov	r1, r2
 80002fe:	2201      	movs	r2, #1
 8000300:	408a      	lsls	r2, r1
 8000302:	4611      	mov	r1, r2
 8000304:	4a6c      	ldr	r2, [pc, #432]	; (80004b8 <GPIO_Init+0x2e0>)
 8000306:	430b      	orrs	r3, r1
 8000308:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &=~ (1<<GPIO->GPIO_PinConfig.pinNumber);
 800030a:	4b6b      	ldr	r3, [pc, #428]	; (80004b8 <GPIO_Init+0x2e0>)
 800030c:	689b      	ldr	r3, [r3, #8]
 800030e:	687a      	ldr	r2, [r7, #4]
 8000310:	7912      	ldrb	r2, [r2, #4]
 8000312:	4611      	mov	r1, r2
 8000314:	2201      	movs	r2, #1
 8000316:	408a      	lsls	r2, r1
 8000318:	43d2      	mvns	r2, r2
 800031a:	4611      	mov	r1, r2
 800031c:	4a66      	ldr	r2, [pc, #408]	; (80004b8 <GPIO_Init+0x2e0>)
 800031e:	400b      	ands	r3, r1
 8000320:	6093      	str	r3, [r2, #8]
 8000322:	e035      	b.n	8000390 <GPIO_Init+0x1b8>
		}
		else if (GPIO->GPIO_PinConfig.pinMode <= GPIO_MODE_IT_RISING)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	795b      	ldrb	r3, [r3, #5]
 8000328:	2b05      	cmp	r3, #5
 800032a:	d817      	bhi.n	800035c <GPIO_Init+0x184>
		{
			EXTI->RTSR |= (1<<GPIO->GPIO_PinConfig.pinNumber);
 800032c:	4b62      	ldr	r3, [pc, #392]	; (80004b8 <GPIO_Init+0x2e0>)
 800032e:	689b      	ldr	r3, [r3, #8]
 8000330:	687a      	ldr	r2, [r7, #4]
 8000332:	7912      	ldrb	r2, [r2, #4]
 8000334:	4611      	mov	r1, r2
 8000336:	2201      	movs	r2, #1
 8000338:	408a      	lsls	r2, r1
 800033a:	4611      	mov	r1, r2
 800033c:	4a5e      	ldr	r2, [pc, #376]	; (80004b8 <GPIO_Init+0x2e0>)
 800033e:	430b      	orrs	r3, r1
 8000340:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &=~ (1<<GPIO->GPIO_PinConfig.pinNumber);
 8000342:	4b5d      	ldr	r3, [pc, #372]	; (80004b8 <GPIO_Init+0x2e0>)
 8000344:	68db      	ldr	r3, [r3, #12]
 8000346:	687a      	ldr	r2, [r7, #4]
 8000348:	7912      	ldrb	r2, [r2, #4]
 800034a:	4611      	mov	r1, r2
 800034c:	2201      	movs	r2, #1
 800034e:	408a      	lsls	r2, r1
 8000350:	43d2      	mvns	r2, r2
 8000352:	4611      	mov	r1, r2
 8000354:	4a58      	ldr	r2, [pc, #352]	; (80004b8 <GPIO_Init+0x2e0>)
 8000356:	400b      	ands	r3, r1
 8000358:	60d3      	str	r3, [r2, #12]
 800035a:	e019      	b.n	8000390 <GPIO_Init+0x1b8>
		}
		else if (GPIO->GPIO_PinConfig.pinMode <= GPIO_MODE_IT_FT_TRIGGER)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	795b      	ldrb	r3, [r3, #5]
 8000360:	2b06      	cmp	r3, #6
 8000362:	d815      	bhi.n	8000390 <GPIO_Init+0x1b8>
		{
			EXTI->FTSR |= (1<<GPIO->GPIO_PinConfig.pinNumber);
 8000364:	4b54      	ldr	r3, [pc, #336]	; (80004b8 <GPIO_Init+0x2e0>)
 8000366:	68db      	ldr	r3, [r3, #12]
 8000368:	687a      	ldr	r2, [r7, #4]
 800036a:	7912      	ldrb	r2, [r2, #4]
 800036c:	4611      	mov	r1, r2
 800036e:	2201      	movs	r2, #1
 8000370:	408a      	lsls	r2, r1
 8000372:	4611      	mov	r1, r2
 8000374:	4a50      	ldr	r2, [pc, #320]	; (80004b8 <GPIO_Init+0x2e0>)
 8000376:	430b      	orrs	r3, r1
 8000378:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<GPIO->GPIO_PinConfig.pinNumber);
 800037a:	4b4f      	ldr	r3, [pc, #316]	; (80004b8 <GPIO_Init+0x2e0>)
 800037c:	689b      	ldr	r3, [r3, #8]
 800037e:	687a      	ldr	r2, [r7, #4]
 8000380:	7912      	ldrb	r2, [r2, #4]
 8000382:	4611      	mov	r1, r2
 8000384:	2201      	movs	r2, #1
 8000386:	408a      	lsls	r2, r1
 8000388:	4611      	mov	r1, r2
 800038a:	4a4b      	ldr	r2, [pc, #300]	; (80004b8 <GPIO_Init+0x2e0>)
 800038c:	430b      	orrs	r3, r1
 800038e:	6093      	str	r3, [r2, #8]
		}

		uint32_t  tmp1 = GPIO->GPIO_PinConfig.pinNumber/4;
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	791b      	ldrb	r3, [r3, #4]
 8000394:	089b      	lsrs	r3, r3, #2
 8000396:	b2db      	uxtb	r3, r3
 8000398:	61bb      	str	r3, [r7, #24]
		uint32_t  tmp2 = GPIO->GPIO_PinConfig.pinNumber%4;
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	791b      	ldrb	r3, [r3, #4]
 800039e:	f003 0303 	and.w	r3, r3, #3
 80003a2:	617b      	str	r3, [r7, #20]
		uint32_t port = WHICH_GPIO_PORT(GPIO->pGPIOx);
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	4a44      	ldr	r2, [pc, #272]	; (80004bc <GPIO_Init+0x2e4>)
 80003aa:	4293      	cmp	r3, r2
 80003ac:	d024      	beq.n	80003f8 <GPIO_Init+0x220>
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	4a43      	ldr	r2, [pc, #268]	; (80004c0 <GPIO_Init+0x2e8>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d01d      	beq.n	80003f4 <GPIO_Init+0x21c>
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4a41      	ldr	r2, [pc, #260]	; (80004c4 <GPIO_Init+0x2ec>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d016      	beq.n	80003f0 <GPIO_Init+0x218>
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	4a40      	ldr	r2, [pc, #256]	; (80004c8 <GPIO_Init+0x2f0>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d00f      	beq.n	80003ec <GPIO_Init+0x214>
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	4a3e      	ldr	r2, [pc, #248]	; (80004cc <GPIO_Init+0x2f4>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d008      	beq.n	80003e8 <GPIO_Init+0x210>
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	4a3d      	ldr	r2, [pc, #244]	; (80004d0 <GPIO_Init+0x2f8>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d101      	bne.n	80003e4 <GPIO_Init+0x20c>
 80003e0:	2305      	movs	r3, #5
 80003e2:	e00a      	b.n	80003fa <GPIO_Init+0x222>
 80003e4:	2300      	movs	r3, #0
 80003e6:	e008      	b.n	80003fa <GPIO_Init+0x222>
 80003e8:	2304      	movs	r3, #4
 80003ea:	e006      	b.n	80003fa <GPIO_Init+0x222>
 80003ec:	2303      	movs	r3, #3
 80003ee:	e004      	b.n	80003fa <GPIO_Init+0x222>
 80003f0:	2302      	movs	r3, #2
 80003f2:	e002      	b.n	80003fa <GPIO_Init+0x222>
 80003f4:	2301      	movs	r3, #1
 80003f6:	e000      	b.n	80003fa <GPIO_Init+0x222>
 80003f8:	2300      	movs	r3, #0
 80003fa:	613b      	str	r3, [r7, #16]

		RCC_SYSCFG_EN();
 80003fc:	4b35      	ldr	r3, [pc, #212]	; (80004d4 <GPIO_Init+0x2fc>)
 80003fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000400:	4a34      	ldr	r2, [pc, #208]	; (80004d4 <GPIO_Init+0x2fc>)
 8000402:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000406:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTIR[tmp1] |= (port << (tmp2 *4));
 8000408:	4a33      	ldr	r2, [pc, #204]	; (80004d8 <GPIO_Init+0x300>)
 800040a:	69bb      	ldr	r3, [r7, #24]
 800040c:	3302      	adds	r3, #2
 800040e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000412:	697b      	ldr	r3, [r7, #20]
 8000414:	009b      	lsls	r3, r3, #2
 8000416:	6939      	ldr	r1, [r7, #16]
 8000418:	fa01 f303 	lsl.w	r3, r1, r3
 800041c:	492e      	ldr	r1, [pc, #184]	; (80004d8 <GPIO_Init+0x300>)
 800041e:	431a      	orrs	r2, r3
 8000420:	69bb      	ldr	r3, [r7, #24]
 8000422:	3302      	adds	r3, #2
 8000424:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		EXTI->IMR |= (1<<GPIO->GPIO_PinConfig.pinNumber);
 8000428:	4b23      	ldr	r3, [pc, #140]	; (80004b8 <GPIO_Init+0x2e0>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	687a      	ldr	r2, [r7, #4]
 800042e:	7912      	ldrb	r2, [r2, #4]
 8000430:	4611      	mov	r1, r2
 8000432:	2201      	movs	r2, #1
 8000434:	408a      	lsls	r2, r1
 8000436:	4611      	mov	r1, r2
 8000438:	4a1f      	ldr	r2, [pc, #124]	; (80004b8 <GPIO_Init+0x2e0>)
 800043a:	430b      	orrs	r3, r1
 800043c:	6013      	str	r3, [r2, #0]

		//Unmisking interrupt

	}

	pinConfig = GPIO->GPIO_PinConfig.pinNumber%8;
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	791b      	ldrb	r3, [r3, #4]
 8000442:	f003 0307 	and.w	r3, r3, #7
 8000446:	61fb      	str	r3, [r7, #28]
	uint8_t altNumber = GPIO->GPIO_PinConfig.pinNumber/8;
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	791b      	ldrb	r3, [r3, #4]
 800044c:	08db      	lsrs	r3, r3, #3
 800044e:	73fb      	strb	r3, [r7, #15]
		GPIO->pGPIOx->AFR[altNumber]  &=~(0xF<<4 *(pinConfig));
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	7bfa      	ldrb	r2, [r7, #15]
 8000456:	3208      	adds	r2, #8
 8000458:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800045c:	69fb      	ldr	r3, [r7, #28]
 800045e:	009b      	lsls	r3, r3, #2
 8000460:	220f      	movs	r2, #15
 8000462:	fa02 f303 	lsl.w	r3, r2, r3
 8000466:	43db      	mvns	r3, r3
 8000468:	4618      	mov	r0, r3
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	7bfa      	ldrb	r2, [r7, #15]
 8000470:	4001      	ands	r1, r0
 8000472:	3208      	adds	r2, #8
 8000474:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		GPIO->pGPIOx->AFR[altNumber]  |= (GPIO->GPIO_PinConfig.pinAltFun <<4*(pinConfig));
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	7bfa      	ldrb	r2, [r7, #15]
 800047e:	3208      	adds	r2, #8
 8000480:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	7a5b      	ldrb	r3, [r3, #9]
 8000488:	461a      	mov	r2, r3
 800048a:	69fb      	ldr	r3, [r7, #28]
 800048c:	009b      	lsls	r3, r3, #2
 800048e:	fa02 f303 	lsl.w	r3, r2, r3
 8000492:	4618      	mov	r0, r3
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	7bfa      	ldrb	r2, [r7, #15]
 800049a:	4301      	orrs	r1, r0
 800049c:	3208      	adds	r2, #8
 800049e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pinConfig = 0;
 80004a2:	2300      	movs	r3, #0
 80004a4:	61fb      	str	r3, [r7, #28]
		altNumber = 0 ;
 80004a6:	2300      	movs	r3, #0
 80004a8:	73fb      	strb	r3, [r7, #15]

}
 80004aa:	bf00      	nop
 80004ac:	3724      	adds	r7, #36	; 0x24
 80004ae:	46bd      	mov	sp, r7
 80004b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b4:	4770      	bx	lr
 80004b6:	bf00      	nop
 80004b8:	40013c00 	.word	0x40013c00
 80004bc:	40020000 	.word	0x40020000
 80004c0:	40020400 	.word	0x40020400
 80004c4:	40020800 	.word	0x40020800
 80004c8:	40020c00 	.word	0x40020c00
 80004cc:	40021000 	.word	0x40021000
 80004d0:	40021c00 	.word	0x40021c00
 80004d4:	40023800 	.word	0x40023800
 80004d8:	40013800 	.word	0x40013800

080004dc <GPIO_TooglePin>:
void GPIO_Set_Port(GPIOx_RegDef *pGPIOx,uint16_t value)
{
	pGPIOx->ODR=value;
}
void GPIO_TooglePin(GPIOx_RegDef *pGPIOx,uint8_t pinNumber)
{
 80004dc:	b480      	push	{r7}
 80004de:	b083      	sub	sp, #12
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]
 80004e4:	460b      	mov	r3, r1
 80004e6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << pinNumber);
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	695b      	ldr	r3, [r3, #20]
 80004ec:	78fa      	ldrb	r2, [r7, #3]
 80004ee:	2101      	movs	r1, #1
 80004f0:	fa01 f202 	lsl.w	r2, r1, r2
 80004f4:	405a      	eors	r2, r3
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	615a      	str	r2, [r3, #20]
}
 80004fa:	bf00      	nop
 80004fc:	370c      	adds	r7, #12
 80004fe:	46bd      	mov	sp, r7
 8000500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000504:	4770      	bx	lr
	...

08000508 <System_TimerPreInit>:




static void System_TimerPreInit(uint32_t reload)
{
 8000508:	b480      	push	{r7}
 800050a:	b085      	sub	sp, #20
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
	uint32_t*temp = SYST_RVR;
 8000510:	4b0b      	ldr	r3, [pc, #44]	; (8000540 <System_TimerPreInit+0x38>)
 8000512:	60fb      	str	r3, [r7, #12]
	*temp = ((*temp & (uint32_t)0xFF000000) | reload);
 8000514:	68fb      	ldr	r3, [r7, #12]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	f003 427f 	and.w	r2, r3, #4278190080	; 0xff000000
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	431a      	orrs	r2, r3
 8000520:	68fb      	ldr	r3, [r7, #12]
 8000522:	601a      	str	r2, [r3, #0]
	temp = SYST_CVR;
 8000524:	4b07      	ldr	r3, [pc, #28]	; (8000544 <System_TimerPreInit+0x3c>)
 8000526:	60fb      	str	r3, [r7, #12]
	*temp &= (uint32_t)0xFF000000;
 8000528:	68fb      	ldr	r3, [r7, #12]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	f003 427f 	and.w	r2, r3, #4278190080	; 0xff000000
 8000530:	68fb      	ldr	r3, [r7, #12]
 8000532:	601a      	str	r2, [r3, #0]

}
 8000534:	bf00      	nop
 8000536:	3714      	adds	r7, #20
 8000538:	46bd      	mov	sp, r7
 800053a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053e:	4770      	bx	lr
 8000540:	e000e014 	.word	0xe000e014
 8000544:	e000e018 	.word	0xe000e018

08000548 <Sytem_TimerInit>:

static void Sytem_TimerInit(void)
{
 8000548:	b480      	push	{r7}
 800054a:	af00      	add	r7, sp, #0



	SysTick->enable |= 7;
 800054c:	4b07      	ldr	r3, [pc, #28]	; (800056c <Sytem_TimerInit+0x24>)
 800054e:	781b      	ldrb	r3, [r3, #0]
 8000550:	4a06      	ldr	r2, [pc, #24]	; (800056c <Sytem_TimerInit+0x24>)
 8000552:	f043 0307 	orr.w	r3, r3, #7
 8000556:	b2db      	uxtb	r3, r3
 8000558:	7013      	strb	r3, [r2, #0]




	*NVIC_ISER0 = (1<<6);
 800055a:	4b05      	ldr	r3, [pc, #20]	; (8000570 <Sytem_TimerInit+0x28>)
 800055c:	2240      	movs	r2, #64	; 0x40
 800055e:	601a      	str	r2, [r3, #0]
}
 8000560:	bf00      	nop
 8000562:	46bd      	mov	sp, r7
 8000564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000568:	4770      	bx	lr
 800056a:	bf00      	nop
 800056c:	e000e010 	.word	0xe000e010
 8000570:	e000e100 	.word	0xe000e100

08000574 <System_Delay>:

void System_Delay(uint32_t ntime)
{
 8000574:	b580      	push	{r7, lr}
 8000576:	b084      	sub	sp, #16
 8000578:	af00      	add	r7, sp, #0
 800057a:	6078      	str	r0, [r7, #4]
	delay = ntime;
 800057c:	4a0a      	ldr	r2, [pc, #40]	; (80005a8 <System_Delay+0x34>)
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	6013      	str	r3, [r2, #0]
	uint32_t sysclock  = (16000000/1000)-1; // 1ms
 8000582:	f643 637f 	movw	r3, #15999	; 0x3e7f
 8000586:	60fb      	str	r3, [r7, #12]
	System_TimerPreInit(sysclock);
 8000588:	68f8      	ldr	r0, [r7, #12]
 800058a:	f7ff ffbd 	bl	8000508 <System_TimerPreInit>
	Sytem_TimerInit();
 800058e:	f7ff ffdb 	bl	8000548 <Sytem_TimerInit>
	while(delay);
 8000592:	bf00      	nop
 8000594:	4b04      	ldr	r3, [pc, #16]	; (80005a8 <System_Delay+0x34>)
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	2b00      	cmp	r3, #0
 800059a:	d1fb      	bne.n	8000594 <System_Delay+0x20>

}
 800059c:	bf00      	nop
 800059e:	bf00      	nop
 80005a0:	3710      	adds	r7, #16
 80005a2:	46bd      	mov	sp, r7
 80005a4:	bd80      	pop	{r7, pc}
 80005a6:	bf00      	nop
 80005a8:	20000020 	.word	0x20000020

080005ac <SysTick_Handler>:

void SysTick_Handler(void)
{
 80005ac:	b480      	push	{r7}
 80005ae:	af00      	add	r7, sp, #0
  if(delay)
 80005b0:	4b06      	ldr	r3, [pc, #24]	; (80005cc <SysTick_Handler+0x20>)
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	2b00      	cmp	r3, #0
 80005b6:	d004      	beq.n	80005c2 <SysTick_Handler+0x16>
	  delay--;
 80005b8:	4b04      	ldr	r3, [pc, #16]	; (80005cc <SysTick_Handler+0x20>)
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	3b01      	subs	r3, #1
 80005be:	4a03      	ldr	r2, [pc, #12]	; (80005cc <SysTick_Handler+0x20>)
 80005c0:	6013      	str	r3, [r2, #0]
}
 80005c2:	bf00      	nop
 80005c4:	46bd      	mov	sp, r7
 80005c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ca:	4770      	bx	lr
 80005cc:	20000020 	.word	0x20000020

080005d0 <main>:
#include "stm32f411x.h"
#include "stm32f411x_gpio.h"
#include "stm32f411x_timers.h"
uint32_t delay;
int main(void)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b084      	sub	sp, #16
 80005d4:	af00      	add	r7, sp, #0
	*					Configuring GPIO for SPI alt function 5
	===================================================================================================
	*/


	RCC_GPIOA_EN();
 80005d6:	4b0f      	ldr	r3, [pc, #60]	; (8000614 <main+0x44>)
 80005d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005da:	4a0e      	ldr	r2, [pc, #56]	; (8000614 <main+0x44>)
 80005dc:	f043 0301 	orr.w	r3, r3, #1
 80005e0:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOx_Handle_t LED;
	LED.pGPIOx = GPIOA;
 80005e2:	4b0d      	ldr	r3, [pc, #52]	; (8000618 <main+0x48>)
 80005e4:	607b      	str	r3, [r7, #4]
	LED.GPIO_PinConfig.pinNumber = 5;
 80005e6:	2305      	movs	r3, #5
 80005e8:	723b      	strb	r3, [r7, #8]
	LED.GPIO_PinConfig.pinMode = GPIO_MODE_OUT;
 80005ea:	2301      	movs	r3, #1
 80005ec:	727b      	strb	r3, [r7, #9]
	LED.GPIO_PinConfig.pinOType = GPIO_OUTPUT_PP;
 80005ee:	2300      	movs	r3, #0
 80005f0:	733b      	strb	r3, [r7, #12]
	LED.GPIO_PinConfig.pinPuPd = GPIO_PULL_NONE;
 80005f2:	2300      	movs	r3, #0
 80005f4:	72fb      	strb	r3, [r7, #11]
	LED.GPIO_PinConfig.pinSpeed = GPIO_SPEED_HIGH;
 80005f6:	2303      	movs	r3, #3
 80005f8:	72bb      	strb	r3, [r7, #10]


	GPIO_Init(&LED);
 80005fa:	1d3b      	adds	r3, r7, #4
 80005fc:	4618      	mov	r0, r3
 80005fe:	f7ff fdeb 	bl	80001d8 <GPIO_Init>


	while (1)
	{
		//SPI_Send_Polling(SPI2,(uint8_t*)userData,strlen(userData));
		GPIO_TooglePin(GPIOA, 5);
 8000602:	2105      	movs	r1, #5
 8000604:	4804      	ldr	r0, [pc, #16]	; (8000618 <main+0x48>)
 8000606:	f7ff ff69 	bl	80004dc <GPIO_TooglePin>
		System_Delay(5000);
 800060a:	f241 3088 	movw	r0, #5000	; 0x1388
 800060e:	f7ff ffb1 	bl	8000574 <System_Delay>
		GPIO_TooglePin(GPIOA, 5);
 8000612:	e7f6      	b.n	8000602 <main+0x32>
 8000614:	40023800 	.word	0x40023800
 8000618:	40020000 	.word	0x40020000

0800061c <Reset_Handler>:
 800061c:	480d      	ldr	r0, [pc, #52]	; (8000654 <LoopForever+0x2>)
 800061e:	4685      	mov	sp, r0
 8000620:	f3af 8000 	nop.w
 8000624:	480c      	ldr	r0, [pc, #48]	; (8000658 <LoopForever+0x6>)
 8000626:	490d      	ldr	r1, [pc, #52]	; (800065c <LoopForever+0xa>)
 8000628:	4a0d      	ldr	r2, [pc, #52]	; (8000660 <LoopForever+0xe>)
 800062a:	2300      	movs	r3, #0
 800062c:	e002      	b.n	8000634 <LoopCopyDataInit>

0800062e <CopyDataInit>:
 800062e:	58d4      	ldr	r4, [r2, r3]
 8000630:	50c4      	str	r4, [r0, r3]
 8000632:	3304      	adds	r3, #4

08000634 <LoopCopyDataInit>:
 8000634:	18c4      	adds	r4, r0, r3
 8000636:	428c      	cmp	r4, r1
 8000638:	d3f9      	bcc.n	800062e <CopyDataInit>
 800063a:	4a0a      	ldr	r2, [pc, #40]	; (8000664 <LoopForever+0x12>)
 800063c:	4c0a      	ldr	r4, [pc, #40]	; (8000668 <LoopForever+0x16>)
 800063e:	2300      	movs	r3, #0
 8000640:	e001      	b.n	8000646 <LoopFillZerobss>

08000642 <FillZerobss>:
 8000642:	6013      	str	r3, [r2, #0]
 8000644:	3204      	adds	r2, #4

08000646 <LoopFillZerobss>:
 8000646:	42a2      	cmp	r2, r4
 8000648:	d3fb      	bcc.n	8000642 <FillZerobss>
 800064a:	f000 f811 	bl	8000670 <__libc_init_array>
 800064e:	f7ff ffbf 	bl	80005d0 <main>

08000652 <LoopForever>:
 8000652:	e7fe      	b.n	8000652 <LoopForever>
 8000654:	20020000 	.word	0x20020000
 8000658:	20000000 	.word	0x20000000
 800065c:	20000000 	.word	0x20000000
 8000660:	080006d8 	.word	0x080006d8
 8000664:	20000000 	.word	0x20000000
 8000668:	20000024 	.word	0x20000024

0800066c <ADC_IRQHandler>:
 800066c:	e7fe      	b.n	800066c <ADC_IRQHandler>
	...

08000670 <__libc_init_array>:
 8000670:	b570      	push	{r4, r5, r6, lr}
 8000672:	4d0d      	ldr	r5, [pc, #52]	; (80006a8 <__libc_init_array+0x38>)
 8000674:	4c0d      	ldr	r4, [pc, #52]	; (80006ac <__libc_init_array+0x3c>)
 8000676:	1b64      	subs	r4, r4, r5
 8000678:	10a4      	asrs	r4, r4, #2
 800067a:	2600      	movs	r6, #0
 800067c:	42a6      	cmp	r6, r4
 800067e:	d109      	bne.n	8000694 <__libc_init_array+0x24>
 8000680:	4d0b      	ldr	r5, [pc, #44]	; (80006b0 <__libc_init_array+0x40>)
 8000682:	4c0c      	ldr	r4, [pc, #48]	; (80006b4 <__libc_init_array+0x44>)
 8000684:	f000 f818 	bl	80006b8 <_init>
 8000688:	1b64      	subs	r4, r4, r5
 800068a:	10a4      	asrs	r4, r4, #2
 800068c:	2600      	movs	r6, #0
 800068e:	42a6      	cmp	r6, r4
 8000690:	d105      	bne.n	800069e <__libc_init_array+0x2e>
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f855 3b04 	ldr.w	r3, [r5], #4
 8000698:	4798      	blx	r3
 800069a:	3601      	adds	r6, #1
 800069c:	e7ee      	b.n	800067c <__libc_init_array+0xc>
 800069e:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a2:	4798      	blx	r3
 80006a4:	3601      	adds	r6, #1
 80006a6:	e7f2      	b.n	800068e <__libc_init_array+0x1e>
 80006a8:	080006d0 	.word	0x080006d0
 80006ac:	080006d0 	.word	0x080006d0
 80006b0:	080006d0 	.word	0x080006d0
 80006b4:	080006d4 	.word	0x080006d4

080006b8 <_init>:
 80006b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ba:	bf00      	nop
 80006bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006be:	bc08      	pop	{r3}
 80006c0:	469e      	mov	lr, r3
 80006c2:	4770      	bx	lr

080006c4 <_fini>:
 80006c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006c6:	bf00      	nop
 80006c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ca:	bc08      	pop	{r3}
 80006cc:	469e      	mov	lr, r3
 80006ce:	4770      	bx	lr
